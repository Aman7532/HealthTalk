---
- name: Deploy chat app to minikube
  hosts: all
  become: yes
  become_method: sudo
  become_user: root
  gather_facts: no  # Skip gathering facts to speed up the process

  vars:
    ansible_become_pass: "{{ lookup('env', 'Amanag@123') }}"

  tasks:
    - name: Print current working directory
      shell: pwd
      register: pwd_output

    - name: Display current working directory
      debug:
        msg: "Current working directory: {{ pwd_output.stdout }}"
        
    - name: Deploy frontend
      shell: kubectl apply -f {{ pwd_output.stdout }}/kubernetes/frontend.yaml --validate=false
      register: frontend_deploy_result
      ignore_errors: yes

    - name: Deploy backend
      shell: kubectl apply -f {{ pwd_output.stdout }}/kubernetes/backend.yaml --validate=false
      register: backend_deploy_result

    - name: Deploy logstash
      shell: kubectl apply -f {{ pwd_output.stdout }}/kubernetes/logstash.yaml --validate=false
      register: logstash_deploy_result

    - name: Deploy elasticsearch
      shell: kubectl apply -f {{ pwd_output.stdout }}/kubernetes/elasticsearch.yaml --validate=false
      register: elasticsearch_deploy_result

    - name: Deploy kibana
      shell: kubectl apply -f {{ pwd_output.stdout }}/kubernetes/kibana.yaml --validate=false
      register: kibana_deploy_result




# ---
# - name: Deploy chat app to minikube
#   hosts: all
#   become: yes
#   become_method: sudo
#   become_user: root
#   vars:
#     ansible_sudo_pass: "{{ ansible_sudo_pass }}"
#   gather_facts: no  # Skip gathering facts to speed up the process

#   vars:
#     ansible_become_pass: "{{ lookup('env', 'SUDO_PASSWORD') }}"

#   tasks:
#     - name: Deploy frontend
#       shell: KUBECONFIG=/home/sankalp/.kube/config kubectl apply -f ../kubernetes/frontend.yaml --validate=false
#       register: frontend_deploy_result
#       ignore_errors: yes

#     - name: Deploy frontend
#       shell: KUBECONFIG=/home/sankalp/.kube/config kubectl apply -f ../kubernetes/backend.yaml --validate=false
#       register: backend_deploy_result

    # - name: Deploy logstash
    #   shell: KUBECONFIG=/home/sankalp/.kube/config kubectl apply -f ../kubernetes/logstash.yaml --validate=false
    #   register: backend_deploy_result
